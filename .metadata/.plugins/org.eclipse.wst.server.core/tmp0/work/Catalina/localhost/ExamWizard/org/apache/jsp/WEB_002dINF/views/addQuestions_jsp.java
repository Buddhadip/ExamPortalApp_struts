/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-07-19 11:55:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addQuestions_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Add Questions</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"public/styles/addQuestions.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"header\">Exam code:  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </div>\r\n");
      out.write("    <div class=\"more-qs\">\r\n");
      out.write("      <a href=\"./allQuestions\">Add from previous questions</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("      <form id=\"mcq-form\"  action=\"submitQuestions.do\">\r\n");
      out.write("        <input\r\n");
      out.write("             \r\n");
      out.write("              type=\"text\"\r\n");
      out.write("              id=\"option-a-image\"\r\n");
      out.write("              name=\"eid\"\r\n");
      out.write("              value= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("              style=\"display:none;\"\r\n");
      out.write("            />\r\n");
      out.write("        <div class=\"question-container\">\r\n");
      out.write("          <h2 style=\"text-align: center\">ADD QUESTIONS</h2>\r\n");
      out.write("          <div class=\"question-section\">\r\n");
      out.write("            <label for=\"question1\">Question:</label>\r\n");
      out.write("            <textarea\r\n");
      out.write("              type=\"text\"\r\n");
      out.write("              id=\"question1\"\r\n");
      out.write("              name=\"q_text\"\r\n");
      out.write("              placeholder=\"Enter the question\"\r\n");
      out.write("              oninput=\"autoResizeTextarea(this)\"\r\n");
      out.write("              required\r\n");
      out.write("            ></textarea>\r\n");
      out.write("            <input\r\n");
      out.write("              class=\"file-input\"\r\n");
      out.write("              type=\"file\"\r\n");
      out.write("              id=\"option_a_image\"\r\n");
      out.write("              name=\"q-image\"\r\n");
      out.write("              onchange=\"handleFileInputChange(this)\"\r\n");
      out.write("            />\r\n");
      out.write("            <!-- <img id=\"preview-image\" class=\"preview-image\" src=\"\" alt=\"Preview Image\" /> -->\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"option-section\">\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("              <label for=\"option-a\">\r\n");
      out.write("              	<div class=\"round-option\">A</div>\r\n");
      out.write("              </label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"text\"\r\n");
      out.write("                class=\"option-input\"\r\n");
      out.write("                id=\"option-a-text\"\r\n");
      out.write("                name=\"option_a_text\"\r\n");
      out.write("                placeholder=\"Enter option A\"\r\n");
      out.write("                required\r\n");
      out.write("              />\r\n");
      out.write("              <input\r\n");
      out.write("                class=\"file-input\"\r\n");
      out.write("                type=\"file\"\r\n");
      out.write("                id=\"option-a-image\"\r\n");
      out.write("                name=\"option_a_image\"\r\n");
      out.write("                onchange=\"handleFileInputChange(this)\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("              <label for=\"option-b\"><div class=\"round-option\">B</div></label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"text\"\r\n");
      out.write("                class=\"option-input\"\r\n");
      out.write("                id=\"option-b-text\"\r\n");
      out.write("                name=\"option_b_text\"\r\n");
      out.write("                placeholder=\"Enter option B\"\r\n");
      out.write("                required\r\n");
      out.write("              />\r\n");
      out.write("              <input\r\n");
      out.write("                class=\"file-input\"\r\n");
      out.write("                type=\"file\"\r\n");
      out.write("                id=\"option-b-image\"\r\n");
      out.write("                name=\"option_b_image\"\r\n");
      out.write("                onchange=\"handleFileInputChange(this)\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("              <label for=\"option-c\"><div class=\"round-option\">C</div></label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"text\"\r\n");
      out.write("                class=\"option-input\"\r\n");
      out.write("                id=\"option-c-text\"\r\n");
      out.write("                name=\"option_c_text\"\r\n");
      out.write("                placeholder=\"Enter option C\"\r\n");
      out.write("                required\r\n");
      out.write("              />\r\n");
      out.write("              <input\r\n");
      out.write("                class=\"file-input\"\r\n");
      out.write("                type=\"file\"\r\n");
      out.write("                id=\"option-c-image\"\r\n");
      out.write("                name=\"option_c_image\"\r\n");
      out.write("                onchange=\"handleFileInputChange(this)\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("              <label for=\"option-d\"><div class=\"round-option\">D</div></label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"text\"\r\n");
      out.write("                class=\"option-input\"\r\n");
      out.write("                id=\"option-d-text\"\r\n");
      out.write("                name=\"option_d_text\"\r\n");
      out.write("                placeholder=\"Enter option D\"\r\n");
      out.write("                required\r\n");
      out.write("              />\r\n");
      out.write("              <input\r\n");
      out.write("                class=\"file-input\"\r\n");
      out.write("                type=\"file\"\r\n");
      out.write("                id=\"option-d-image\"\r\n");
      out.write("                name=\"option_d_image\"\r\n");
      out.write("                onchange=\"handleFileInputChange(this)\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"correct-option\">\r\n");
      out.write("            <label for=\"answer\">Correct answer</label>\r\n");
      out.write("            <select class=\"custom-select\" name=\"answer\" id=\"answer\">\r\n");
      out.write("              <option value=\"a\">Option A</option>\r\n");
      out.write("              <option value=\"b\">Option B</option>\r\n");
      out.write("              <option value=\"c\">Option C</option>\r\n");
      out.write("              <option value=\"d\">Option D</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"correct-option\">\r\n");
      out.write("            <label for=\"answer\">Question marks</label>\r\n");
      out.write("            <select class=\"custom-select\" name=\"marks\" id=\"answer\">\r\n");
      out.write("              <option value=\"1\" >1</option>\r\n");
      out.write("              <option value=\"2\">2</option>\r\n");
      out.write("              <option value=\"3\">3</option>\r\n");
      out.write("              <option value=\"4\">4</option>\r\n");
      out.write("              <option value=\"5\">5</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div style=\"display: flex; justify-content: center; margin-top: 20px\">\r\n");
      out.write("            <button class=\"add-qs-button\" type=\"submit\" class=\"submit-btn\">\r\n");
      out.write("              Add Questions\r\n");
      out.write("            </button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
