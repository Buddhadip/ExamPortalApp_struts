package com.exam.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.exam.form.ExamForm;

public class OptionDAO {

    private String jdbcURL;
    private String jdbcUsername;
    private String jdbcPassword;
    private Connection conn;

    public OptionDAO() {
        this.jdbcURL = "jdbc:mysql://localhost:3306/exam_master";
        this.jdbcUsername = "root";
        this.jdbcPassword = "root";
    }

    // Establishes a database connection
    protected void connect() throws SQLException {
        if (conn == null || conn.isClosed()) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                throw new SQLException(e);
            }
            conn = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
        }
    }

    // Closes the database connection
    protected void disconnect() throws SQLException {
        if (conn != null && !conn.isClosed()) {
            conn.close();
        }
    }
    
    // Method to insert a new option into the "Option" table
    public int insertOption(String optionText, int questionId) throws SQLException {
        String sql = "INSERT INTO Option (OText, Qid) VALUES (?, ?)";
        
        PreparedStatement statement = conn.prepareStatement(sql); 
            statement.setString(1, optionText);
            statement.setInt(2, questionId);
            
            statement.executeUpdate();
            ResultSet generatedKeys = statement.getGeneratedKeys();
            int generatedId=0;
            if (generatedKeys.next()) {
                generatedId = generatedKeys.getInt(1);
                System.out.println("Automatically generated ID: " + generatedId);
            }
            
            statement.close();
            disconnect();
            return generatedId;
        }
    
}
