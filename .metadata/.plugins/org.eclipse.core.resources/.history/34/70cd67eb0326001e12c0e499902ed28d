package com.exam.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.exam.form.ExamForm;

public class ExamUserDAO {
	 private String jdbcURL;
	    private String jdbcUsername;
	    private String jdbcPassword;
	    private Connection conn;

	    public ExamUserDAO() {
	        this.jdbcURL = "jdbc:mysql://localhost:3306/exam_master";
	        this.jdbcUsername = "root";
	        this.jdbcPassword = "root";
	    }

	    // Establishes a database connection
	    protected void connect() throws SQLException {
	        if (conn == null || conn.isClosed()) {
	            try {
	                Class.forName("com.mysql.cj.jdbc.Driver");
	            } catch (ClassNotFoundException e) {
	                throw new SQLException(e);
	            }
	            conn = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
	        }
	    }

	    // Closes the database connection
	    protected void disconnect() throws SQLException {
	        if (conn != null && !conn.isClosed()) {
	            conn.close();
	        }
	    }
	    public List<String> getStudentByExam(String eid) throws SQLException {
	        List<String> students = new ArrayList<>();

	        connect();
	        String query = "SELECT uid FROM ExamUser where eid="+eid;
	        System.out.println(query);
	        Statement statement = conn.createStatement();
	        ResultSet resultSet = statement.executeQuery(query);

	        while (resultSet.next()) {
	            String uid = resultSet.getString("uid");
	            students.add(uid);
	        }
	        disconnect();

	        return students;
	    }
	    
	    public List<String> getExamByStudent(String uid) throws SQLException {
	        List<String> exams = new ArrayList<>();

	        connect();
	        String query = "SELECT eid FROM ExamUser where uid = ? ";
	        
	        System.out.println(query);
	        PreparedStatement preparedStatement = conn.prepareStatement(query); 
	        preparedStatement.setString(1,uid);
	        ResultSet resultSet = preparedStatement.executeQuery();

	        while (resultSet.next()) {
	            String eid = resultSet.getString("eid");
	            exams.add(eid);
	        }
	        disconnect();

	        return exams;
	    }
	    
	    
	    
	    public void deleteStudents(String eid) throws SQLException {
	    	connect();
	        String deleteQuery="Delete from ExamUser where eid="+eid;
	        PreparedStatement preparedStatement = conn.prepareStatement(deleteQuery);
	        preparedStatement.executeUpdate();
	        preparedStatement.close();
	        disconnect();
	    }
	    public void insertStudentExam(String eid, String uid) throws SQLException {
	        connect();
	        String query = "INSERT INTO ExamUser (eid,uid) VALUES ( ?, ?)";
	        PreparedStatement preparedStatement = conn.prepareStatement(query); 
	        preparedStatement = conn.prepareStatement(query);
	        preparedStatement.setInt(1, Integer.parseInt(eid));
	        preparedStatement.setString(2,uid);       
	        preparedStatement.executeUpdate();
	        preparedStatement.close();
	        disconnect();
	    }
}
